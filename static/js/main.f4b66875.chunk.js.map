{"version":3,"sources":["components/Phonebook.module.css","redux/redux-units/contacts-selectors.js","redux/redux-units/contacts-actions.js","redux/redux-units/contacts-operations.js","redux/redux-units/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Spinner/Loader.js","App.js","index.js"],"names":["module","exports","getFilter","state","contacts","filter","getItems","items","getLoading","loading","getFilteredContacts","createSelector","allContacts","filtered","preparedContacts","trim","toLowerCase","contact","name","includes","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","number","dispatch","post","then","data","catch","error","contactId","delete","get","createReducer","_","payload","id","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","MODE_ENV","ContactForm","handelChange","e","currentTarget","value","setState","handleSubmit","preventDefault","isExist","props","some","invalide","isNaN","length","toast","warn","info","success","onSubmit","reset","this","className","styles","label","type","placeholder","onChange","input","button","Component","connect","contactsOperations","ContactItem","onDelete","onClick","contactsSelectors","onDeleteContact","list","map","key","item","contactsActions","target","finder","Spinner","spinner","color","height","width","timeout","App","formListener","addContact","fetchContacts","isLoading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4b66875.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Phonebook_spinner__y78ad\",\"list\":\"Phonebook_list__25JuY\",\"text\":\"Phonebook_text__pvRxs\",\"button\":\"Phonebook_button__1V4cM\",\"label\":\"Phonebook_label__2EomU\",\"input\":\"Phonebook_input__3vOnv\",\"finder\":\"Phonebook_finder__3vTYO\",\"item\":\"Phonebook_item__1GW3a\",\"hidden\":\"Phonebook_hidden__3cW14\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.contacts.loading;\nconst getFilter = (state) => state.contacts.filter;\nconst getItems = (state) => state.contacts.items;\n\nconst getFilteredContacts = createSelector(\n  [getItems, getFilter],\n  (allContacts, filtered) => {\n    const preparedContacts = filtered.trim().toLowerCase();\n\n    return allContacts.filter((contact) =>\n      contact.name.trim().toLowerCase().includes(preparedContacts)\n    );\n  }\n);\n\nexport default { getLoading, getFilter, getItems, getFilteredContacts };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const filterContact = createAction(\"contacts/Filter\");\n\nexport default {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n};\n","import axios from \"axios\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error)));\n};\n\nconst addContact = ({ name, number }) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactsReducer } from \"./redux-units\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    middleware,\n  },\n\n  devTools: process.env.MODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { contactsOperations } from \"../../redux/redux-units\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport styles from \"../Phonebook.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    const isExist = contacts.some(\n      (contact) =>\n        contact.name.trim().toLowerCase() === name.trim().toLowerCase()\n    );\n    const invalide = isNaN(number);\n\n    if (name.length === 0 || number.length === 0) {\n      toast.warn(`Fill the form, please ＼(°o°)／ `);\n    } else if (isExist) {\n      toast.info(`${name} already exist (〒﹏〒) `);\n    } else if (invalide) {\n      toast.info(`${number} is invalide phone number 乁( •_• )ㄏ `);\n    } else {\n      toast.success(\" (๑˙❥˙๑) You added new contact!\");\n      this.props.onSubmit(this.state);\n    }\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <ToastContainer />\n        <h2>PhoneBook</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name...\"\n              value={this.state.name}\n              onChange={this.handelChange}\n              className={styles.input}\n            />\n          </label>\n\n          <label className={styles.label}>\n            Phone Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter number...\"\n              value={this.state.number}\n              onChange={this.handelChange}\n              className={styles.input}\n            />\n          </label>\n\n          <label>\n            <button type=\"submit\" className={styles.button}>\n              Add Contact\n            </button>\n          </label>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Phonebook.module.css\";\n\nconst ContactItem = ({ name, number, onDelete }) => {\n  return (\n    <>\n      {name}: {number}\n      <button type=\"button\" className={styles.button} onClick={onDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem\";\nimport { connect } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/redux-units\";\nimport styles from \"../Phonebook.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={styles.list}>\n          {contacts.map(({ name, number, id }) => (\n            <li key={id} className={styles.item}>\n              <ContactItem\n                id={id}\n                number={number}\n                name={name}\n                onDelete={() => onDeleteContact(id)}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    })\n  ),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { contactsSelectors, contactsActions } from \"../../redux/redux-units\";\nimport styles from \"../Phonebook.module.css\";\n\nconst Filter = ({ value, onChange, contacts }) =>\n  contacts.length >= 2 && (\n    <label className={styles.finder}>\n      Finder\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search for...\"\n        onChange={onChange}\n        className={styles.input}\n      />\n    </label>\n  );\n\nconst mapStateToProps = (state) => ({\n  value: contactsSelectors.getFilter(state),\n  contacts: contactsSelectors.getItems(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.filterContact(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from \"../Phonebook.module.css\";\n\nconst Spinner = () => {\n  return (\n    <Loader\n      className={styles.spinner}\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={5000}\n    />\n  );\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./components/Spinner/Loader\";\nimport { contactsSelectors, contactsOperations } from \"./redux/redux-units\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  formListener = ({ name, number }) => {\n    this.addContact(name, number);\n  };\n  render() {\n    return (\n      <>\n        <ContactForm onSubmit={this.formListener} />\n\n        <Filter />\n\n        <h3>Contacts</h3>\n\n        <ContactList />\n\n        {this.props.isLoading && <Spinner />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}